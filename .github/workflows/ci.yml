name: CI
 
on:
  pull_request:
    branches: [ main ]

jobs:
  codegen:
    runs-on: ubuntu-latest

    steps:
       - uses: actions/checkout@v2
       - uses: actions/cache@v2
         with:
           path: node_modules
           key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
           restore-keys: |
             ${{ runner.os }}-npm-
       - uses: actions/setup-node@v2
         with:
           node-version: '14'
       - name: Install Dependencies
         run: npm install
       - name: Run Codegen
         run: npm run codegen
       - name: Verify Changed files
         uses: tj-actions/verify-changed-files@v6.2
         id: verify-changed-files
         with:
           files: |
            src/utils/resolvers.ts
       - name: Process changes
         if: steps.changes.outputs.changed == 1
         run: |
          echo "error: Codegen resulted in uncommitted changes"
          exit 1
          
  inspect-graphql:
    runs-on: ubuntu-latest
    needs: [codegen]
    
    steps:
       - uses: actions/checkout@v2
       - uses: actions/cache@v2
         with:
           path: node_modules
           key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
           restore-keys: |
             ${{ runner.os }}-npm-
       - uses: actions/setup-node@v2
         with:
           node-version: '14'
       - name: Install Dependencies
         run: npm install
       - name: Export Schema
         run: npm run exportSchema
       - uses: kamilkisiela/graphql-inspector@master
         with:
          schema: 'release:schema.graphql'
         
  lint:
    runs-on: ubuntu-latest
    needs: [codegen]

    steps:
       - uses: actions/checkout@v2
       - uses: actions/cache@v2
         with:
           path: node_modules
           key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
           restore-keys: |
             ${{ runner.os }}-npm-
       - uses: actions/setup-node@v2
         with:
           node-version: '14'
       - name: Install Dependencies
         run: npm install
       - name: Run Linter
         run: npm run lint
         
  build:
    runs-on: ubuntu-latest
    needs: [lint]

    steps:
       - uses: actions/checkout@v2
       - uses: actions/cache@v2
         with:
           path: node_modules
           key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
           restore-keys: |
             ${{ runner.os }}-npm-
       - uses: actions/setup-node@v2
         with:
           node-version: '14'
       - name: Install Dependencies
         run: npm install
       - name: Build for Production
         run: npm run build
