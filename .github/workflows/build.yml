name: Build
 
on:
  push:
    branches: [ main ]

jobs:
  codegen:
    runs-on: ubuntu-latest

    steps:
       - uses: actions/checkout@v2
       - uses: actions/cache@v2
         with:
           path: node_modules
           key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
           restore-keys: |
             ${{ runner.os }}-npm-
       - uses: actions/setup-node@v2
         with:
           node-version: '14'
       - name: Install Dependencies
         run: npm install
       - name: Run Codegen
         run: npm run codegen
       - name: Verify Changed files
         uses: tj-actions/verify-changed-files@v6.2
         id: verify-changed-files
         with:
           files: |
            src/utils/resolvers.ts
       - name: Process changes
         if: steps.changes.outputs.changed == 1
         run: |
          echo "error: Codegen resulted in uncommitted changes"
          exit 1 
  
  releaseSchema:
    runs-on: ubuntu-latest
    needs: [codegen]
    
    steps:
       - uses: actions/checkout@v2
         with:
           fetch-depth: 0
       - uses: actions/cache@v2
         with:
           path: node_modules
           key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
           restore-keys: |
             ${{ runner.os }}-npm-
       - uses: actions/setup-node@v2
         with:
           node-version: '14'
       - name: Install Dependencies
         run: npm install
       - name: Export Schema
         run: npm run exportSchema
       - name: Prepare Schema Release Folder
         run: |
          mkdir release
          cp schema.graphql release/schema.graphql
       - name: Push to Schema to special Branch
         uses: s0/git-publish-subdir-action@develop
         env:
          REPO: self
          BRANCH: release
          FOLDER: release
          SKIP_EMPTY_COMMITS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  lint:
    runs-on: ubuntu-latest
    needs: [codegen]

    steps:
       - uses: actions/checkout@v2
       - uses: actions/cache@v2
         with:
           path: node_modules
           key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
           restore-keys: |
             ${{ runner.os }}-npm-
       - uses: actions/setup-node@v2
         with:
           node-version: '14'
       - name: Install Dependencies
         run: npm install
       - name: Run Linter
         run: npm run lint
       
  deploy:
    runs-on: ubuntu-latest
    needs: [lint]

    steps:
       - uses: actions/checkout@v2
         with:
           fetch-depth: 0
       - name: Deploy to dokku
         id: deploy
         uses: idoberko2/dokku-deploy-github-action@v1
         with:
           ssh-private-key: ${{ secrets.DOKKU_SSH_PRIVATE_KEY }}
           dokku-host: '78.47.176.210'
           app-name: 'dogtor-backend'
           git-push-flags: --force

  syncSchema:
    runs-on: ubuntu-latest
    needs: [deploy]
    
    steps:
       - uses: actions/checkout@v2
         with:
           fetch-depth: 0
       - uses: actions/cache@v2
         with:
           path: node_modules
           key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
           restore-keys: |
             ${{ runner.os }}-npm-
       - uses: actions/setup-node@v2
         with:
           node-version: '14'
       - name: Install Dependencies
         run: npm install
       - name: Export Schema
         run: npm run exportSchema
       - name: Create pull request with Updated Schema
         uses: paygoc6/action-pull-request-another-repo@v1.0.1
         env:
           API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
         with:
           source_folder: 'schema.graphql'
           destination_repo: 'Dogtor-Assistant/frontend'
           destination_folder: 'data'
           destination_base_branch: 'main'
           destination_head_branch: 'schema/update'
           user_email: 'me@quintero.io'
           user_name: 'Mathias Quintero (via GitHub Actions)'
           pull_request_reviewers: 'nerdsupremacist,konpap99,Pellumbengineer'
